A new run
Running code0_0
['addi $1, $0, 32', 'addi $2, $1, 128', 'L: addi $1, $1, -1', 'addi $2, $2, -4', 'addi $3, $1, 42', 'sw $3, 0($2)', 'bne $1, $0, L']
# cycles:  162
Final register state:  [0, 0, 32, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [0, 1, 2, 3, 4, 5, 6, 7, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Running code0_1
['addi $1, $0, 32', 'addi $2, $1, 128', 'L: addi $1, $1, -4', 'addi $2, $2, -16', 'addi $3, $1, 42', 'sw $3, 0($2)', 'addi $3, $3, 1', 'sw $3, 4($2)', 'addi $3, $3, 1', 'sw $3, 8($2)', 'addi $3, $3, 1', 'sw $3, 12($2)', 'bne $1, $0, L']
# cycles:  90
Final register state:  [0, 0, 32, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [0, 1, 2, 3, 4, 5, 6, 7, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Running code0_2
['addi $1, $0, 32 | nop', 'addi $2, $1, 128 | nop', 'L: addi $1, $1, -1 | nop', 'addi $2, $2, -4 | nop', 'addi $3, $1, 42 | nop', 'bne $1, $0, L | sw $3, 0($2)']
# cycles:  130
Final register state:  [0, 0, 32, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [0, 1, 2, 3, 4, 5, 6, 7, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Running code0_3
['addi $1, $0, 32 | nop', 'addi $2, $1, 128 | nop', 'L: addi $1, $1, -4 | nop', 'addi $2, $2, -16 | nop', 'addi $3, $1, 42 | nop', 'addi $3, $3, 1 | sw $3, 0($2)', 'addi $3, $3, 1 | sw $3, 4($2)', 'addi $3, $3, 1 | sw $3, 8($2)', 'bne $1, $0, L | sw $3, 12($2)']
# cycles:  58
Final register state:  [0, 0, 32, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [0, 1, 2, 3, 4, 5, 6, 7, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Running code1_0
['addi $1, $1, 128', 'L: addi $1, $1, -4', 'lw $5, 128($1)', 'lw $6, 132($1)', 'add $5, $5, $6', 'sw $5, 0($1)', 'bne $1, $0, L']
# cycles:  193
Final register state:  [0, 0, 0, 0, 0, 65, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Running code1_1
['addi $1, $1, 128', 'L: addi $1, $1, -16', 'lw $5, 128($1)', 'lw $6, 132($1)', 'lw $7, 136($1)', 'add $5, $5, $6', 'sw $5, 0($1)', 'add $5, $6, $7', 'lw $6, 140($1)', 'sw $5, 4($1)', 'add $5, $6, $7', 'lw $7, 144($1)', 'sw $5, 8($1)', 'add $5, $6, $7', 'sw $5, 12($1)', 'bne $1, $0, L']
# cycles:  121
Final register state:  [0, 0, 0, 0, 0, 71, 35, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Running code1_2
['addi $1, $1, 128 | nop', 'L: addi $1, $1, -4 | lw $5, 124($1)', 'nop | lw $6, 132($1)', 'nop | nop', 'add $5, $5, $6 | nop', 'bne $1, $0, L | sw $5, 0($1)']
# cycles:  161
Final register state:  [0, 0, 0, 0, 0, 65, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Running code1_3
['addi $1, $1, 128 | nop', 'L: addi $1, $1, -16 | lw $5, 112($1)', 'nop | lw $6, 132($1)', 'nop | lw $7, 136($1)', 'add $10, $5, $6  | lw $8, 140($1)', 'add $11, $6, $7  | lw $9, 144($1)', 'add $12, $7, $8  | sw $10, 0($1)', 'add $13, $8, $9 | sw $11, 4($1)', 'nop | sw $12, 8($1)', 'bne $1, $0, L | sw $13, 12($1)']
# cycles:  73
Final register state:  [0, 0, 0, 0, 0, 32, 33, 34, 35, 36, 65, 67, 69, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Running code1_4
['addi $1, $1, 128 | nop | nop | nop', 'L: addi $1, $1, -4 | nop | lw $5, 124($1)  |  lw $6, 128($1)', 'nop| nop | nop  | nop', 'add $5, $5, $6 | nop | nop | nop', 'bne $1, $0, L | nop | nop | sw $5, 0($1)']
# cycles:  129
Final register state:  [0, 0, 0, 0, 0, 65, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Running code1_5
['addi $1, $1, 128 | nop | nop | nop', 'L: addi $1, $1, -16 | nop | lw $5, 112($1)  |  lw $6, 116($1)', 'nop| nop | lw $7, 136($1)  | lw $8, 140($1)', 'add $10, $5, $6 | nop | lw $9, 144($1) | nop', 'add $11, $7, $6  | add $12, $7, $8 | nop | sw $10, 0($1)', 'add $13, $8, $9  | nop |  sw $12, 8($1) | sw $11, 4($1)', 'bne $1, $0, L | nop | nop | sw $13, 12($1)']
# cycles:  49
Final register state:  [0, 0, 0, 0, 0, 32, 33, 34, 35, 36, 65, 67, 69, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Final memory state: [65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
